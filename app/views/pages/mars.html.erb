
<style>
  body{
    margin: 0;
  }
  canvas{
    width:100%;
    height:100%;
  }
</style>
<body>

  <script src="assets/three.js"></script>
  <script src="assets/OrbitControls.js"></script>
  <script>


    var scene = new THREE.Scene();
    var camera = new THREE.PerspectiveCamera( 75,window.innerWidth / window.innerHeight, 0.1,1000 );

    var renderer = new THREE.WebGLRenderer();
    renderer.setSize( window.innerWidth, window.innerHeight );
    document.body.appendChild( renderer.domElement );

    window.addEventListener( 'resize', function(){
      var width = window.innerWidth;
      var height = window.innerHeight;
      renderer.setSize(width, height);
      camera.aspect = width / height;
      camera.updateProjectionMatrix();
    });

    controls = new THREE.OrbitControls( camera, renderer.domElement );

  // create the shape
  var geometry = new THREE.SphereGeometry( 5,32,32);
  var material = new THREE.MeshBasicMaterial( {color: 0xFFFFFF, wireframe: true} );

  // var material = new THREE.MeshPhongMaterial();

  var earthMesh = new THREE.Mesh(geometry, material)

  // create a material color or image texture
  // var sphere = new THREE.Mesh(geometry, material);

  scene.add(earthMesh);

  camera.position.z = 10;


  //game logic
    // var update = function(){
    //   sphere.rotation.x += 0.01;
    //   sphere.rotation.y += 0.005;
    // };

    // draw scene
    var render = function(){
      renderer.render( scene, camera );
      earthMesh.rotation.y += 0.005;
    };

    // run game loop( update, render, request)
    var GameLoop = function(){
      requestAnimationFrame( GameLoop );

      // update( );
      render( );
    };

    GameLoop();

  </script>
</body>
